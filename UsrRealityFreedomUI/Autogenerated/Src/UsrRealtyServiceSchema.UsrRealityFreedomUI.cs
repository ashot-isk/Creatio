namespace Terrasoft.Configuration
{

	using System;
	using System.Collections.Generic;
	using System.Collections.ObjectModel;
	using System.Globalization;
	using Terrasoft.Common;
	using Terrasoft.Core;
	using Terrasoft.Core.Configuration;

	#region Class: UsrRealtyServiceSchema

	/// <exclude/>
	public class UsrRealtyServiceSchema : Terrasoft.Core.SourceCodeSchema
	{

		#region Constructors: Public

		public UsrRealtyServiceSchema(SourceCodeSchemaManager sourceCodeSchemaManager)
			: base(sourceCodeSchemaManager) {
		}

		public UsrRealtyServiceSchema(UsrRealtyServiceSchema source)
			: base( source) {
		}

		#endregion

		#region Methods: Protected

		protected override void InitializeProperties() {
			base.InitializeProperties();
			UId = new Guid("87d1d58b-e6e4-4cd6-bb17-1a4c378c56c8");
			Name = "UsrRealtyService";
			ParentSchemaUId = new Guid("50e3acc0-26fc-4237-a095-849a1d534bd3");
			CreatedInPackageId = new Guid("77e34f0a-cc92-478b-970d-7fecb0dcf437");
			ZipBody = new byte[] { 31,139,8,0,0,0,0,0,4,0,165,84,77,79,27,49,16,61,147,95,97,229,180,43,81,75,189,150,182,18,33,80,165,82,10,202,18,113,168,56,56,187,147,96,213,31,203,216,78,73,129,255,142,189,222,144,117,200,199,161,62,172,214,158,247,102,158,199,51,227,12,87,11,82,172,140,5,73,39,78,89,46,129,22,128,156,9,254,143,89,174,213,89,207,117,49,222,182,228,37,140,117,5,226,128,137,158,151,150,47,143,57,160,119,48,91,155,111,1,145,25,61,183,244,66,171,57,95,56,76,216,93,51,2,29,14,62,26,188,51,111,148,50,144,122,138,73,48,53,43,129,76,13,78,192,95,199,174,174,16,160,210,114,58,234,61,247,136,95,191,91,45,62,160,69,86,218,251,120,122,110,234,95,96,189,167,218,43,152,241,192,156,192,163,227,8,18,148,53,89,119,19,174,65,190,145,35,148,128,162,237,65,149,199,48,181,155,9,94,146,82,48,99,214,26,237,170,85,68,190,144,1,51,208,238,26,124,148,220,8,188,174,33,38,39,21,222,216,124,18,70,106,169,255,64,54,6,251,160,43,47,174,127,115,93,220,246,79,201,64,87,171,194,174,68,16,236,97,99,48,134,45,224,253,148,14,24,194,41,9,50,193,216,43,141,146,217,4,25,143,232,79,163,213,233,123,192,176,38,62,211,90,25,56,204,201,55,42,219,187,175,121,65,2,249,1,118,204,158,110,208,223,55,100,184,169,15,34,195,55,127,231,61,39,97,151,12,9,130,113,34,132,84,240,55,241,151,229,190,8,186,104,62,39,89,227,142,198,76,223,174,106,24,249,244,120,170,19,130,188,188,144,174,245,122,62,7,76,33,121,226,46,149,18,86,148,66,47,17,53,94,196,178,176,232,224,108,31,176,185,170,7,125,250,156,66,94,147,29,8,3,71,2,135,60,212,173,179,44,43,64,64,105,243,144,143,248,155,77,13,120,65,74,249,127,95,51,249,7,254,122,81,159,255,172,239,75,177,81,54,45,134,253,3,216,43,212,178,1,111,247,214,33,210,221,3,32,52,172,152,218,67,216,145,185,124,116,76,100,23,90,56,169,232,13,67,223,209,22,112,199,35,230,7,220,156,171,170,9,216,121,208,255,142,218,241,149,239,137,77,47,159,160,116,22,138,146,9,134,95,43,40,185,100,226,251,135,170,12,107,71,225,204,153,127,246,163,149,211,60,250,118,241,244,82,130,117,168,214,93,178,129,198,26,139,223,56,244,134,204,178,116,156,36,3,106,221,145,219,163,40,208,198,32,103,128,247,189,147,147,150,98,44,134,201,156,244,217,51,89,128,61,35,38,124,58,34,187,14,200,30,15,221,94,76,221,108,93,98,75,241,102,24,108,169,110,113,51,173,5,217,100,125,143,194,22,220,190,32,137,185,223,37,227,245,13,147,213,85,194,76,7,0,0 };
		}

		#endregion

		#region Methods: Public

		public override void GetParentRealUIds(Collection<Guid> realUIds) {
			base.GetParentRealUIds(realUIds);
			realUIds.Add(new Guid("87d1d58b-e6e4-4cd6-bb17-1a4c378c56c8"));
		}

		#endregion

	}

	#endregion

}

